<?xml version="1.0" encoding="UTF-8"?>
<!--
 Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.
-->
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans.xsd
           http://www.springframework.org/schema/aop
           http://www.springframework.org/schema/aop/spring-aop.xsd">

    <bean id="hybridCustomersPrepareInterceptor" class="com.training.commreceservice.service.interceptors.HybridsCustomersPrepareInterceptor">
        <property name="userGroupDao" ref="userGroupDao"/>
    </bean>

    <bean id="hybridCustomersPrepareInterceptorMapping" class="de.hybris.platform.servicelayer.interceptor.impl.InterceptorMapping">
        <property name="interceptor" ref="hybridCustomersPrepareInterceptor"/>
        <property name="typeCode" value="Customer"/>
    </bean>
	
    <bean id="trainingcommerceserviceSystemSetup" class="com.training.commreceservice.setup.TrainingcommerceserviceSystemSetup">
        <!-- constructor arg injection example -->
        <constructor-arg ref="trainingcommerceserviceService"/>
    </bean>

    <bean id="trainingcommerceserviceService" class="com.training.commreceservice.service.impl.DefaultTrainingcommerceserviceService">
        <!-- setter injection example -->
        <property name="modelService" ref="modelService"/>
        <property name="mediaService" ref="mediaService"/>
        <property name="flexibleSearchService" ref="flexibleSearchService"/>
    </bean>
			
</beans>
